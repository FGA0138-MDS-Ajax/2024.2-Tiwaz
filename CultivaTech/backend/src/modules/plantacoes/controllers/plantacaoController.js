const plantacaoService = require("../services/plantacaoService");
const Plantacao = require("../models/Plantacao"); // Corrigir a importa√ß√£o do modelo

// Cadastrar Planta√ß√£o
const cadastrarPlantacao = async (req, res) => {
  try {
    const { nome, tipo, areaPlantada, quantidadePlantada, dataPlantio, custoInicial } = req.body;

    // Verifica√ß√£o de campos obrigat√≥rios
    if (!nome || !tipo || (!areaPlantada && !quantidadePlantada) || !dataPlantio || !custoInicial) {
      return res.status(400).json({
        success: false,
        error: "Todos os campos obrigat√≥rios devem ser preenchidos!",
      });
    }

    // Cadastra nova planta√ß√£o
    const novaPlantacao = await plantacaoService.cadastrarPlantacao({
      nome,
      tipo,
      areaPlantada: areaPlantada || null,
      quantidadePlantada: quantidadePlantada || null,
      dataPlantio,
      custoInicial,
    });

    console.log("Planta√ß√£o cadastrada com sucesso:", novaPlantacao);

    return res.status(201).json({
      success: true,
      message: "Planta√ß√£o cadastrada com sucesso!",
      data: novaPlantacao, // Retorno organizado dentro de `data`
    });
  } catch (error) {
    console.error("Erro ao cadastrar planta√ß√£o:", error.stack);
    return res.status(500).json({ success: false, error: "Erro ao cadastrar planta√ß√£o!" });
  }
};

const listarPlantacoes = async (req, res) => {
  try {
      console.log("üìå Requisi√ß√£o recebida para listar planta√ß√µes...");

      // Verifica se o modelo Plantacao est√° definido
      if (typeof Plantacao === "undefined") {
          console.error("‚ùå Erro: Modelo 'Plantacao' n√£o encontrado. Verifique a importa√ß√£o.");
          return res.status(500).json({
              success: false,
              error: "Erro interno do servidor: Modelo 'Plantacao' n√£o encontrado.",
          });
      }

      // Busca todas as planta√ß√µes no banco de dados
      const plantacoes = await Plantacao.findAll();

      if (!plantacoes || plantacoes.length === 0) {
          console.warn("‚ö†Ô∏è Nenhuma planta√ß√£o encontrada no banco.");
          return res.status(200).json({
              success: true,
              message: "Nenhuma planta√ß√£o encontrada.",
              data: [],
          });
      }

      console.log(`‚úÖ ${plantacoes.length} planta√ß√µes encontradas!`);
      return res.status(200).json({
          success: true,
          message: "Planta√ß√µes encontradas!",
          data: plantacoes,
      });
  } catch (error) {
      console.error("‚ùå Erro ao listar planta√ß√µes:", error.message || error);
      return res.status(500).json({
          success: false,
          error: "Erro ao listar planta√ß√µes!",
          details: error.message || "Erro desconhecido.",
      });
  }
};


// Atualizar Planta√ß√£o
const atualizarPlantacao = async (req, res) => {
  try {
    const { id } = req.params;
    const { nome, tipo, areaPlantada, quantidadePlantada, dataPlantio, custoInicial } = req.body;

    // Atualiza a planta√ß√£o
    const plantacaoAtualizada = await plantacaoService.atualizarPlantacao(id, {
      nome,
      tipo,
      areaPlantada: areaPlantada || null,
      quantidadePlantada: quantidadePlantada || null,
      dataPlantio,
      custoInicial,
    });

    if (!plantacaoAtualizada) {
      return res.status(404).json({ success: false, error: "Planta√ß√£o n√£o encontrada!" });
    }

    console.log(`Planta√ß√£o ${id} atualizada com sucesso!`);

    return res.status(200).json({
      success: true,
      message: "Planta√ß√£o atualizada com sucesso!",
      data: plantacaoAtualizada,
    });
  } catch (error) {
    console.error("Erro ao atualizar planta√ß√£o:", error.stack);
    return res.status(500).json({ success: false, error: "Erro ao atualizar planta√ß√£o!" });
  }
};

// Excluir Planta√ß√£o
const excluirPlantacao = async (req, res) => {
  try {
    const { id } = req.params;
    
    // Exclui a planta√ß√£o
    const plantacaoExcluida = await plantacaoService.excluirPlantacao(id);

    if (!plantacaoExcluida) {
      return res.status(404).json({ success: false, error: "Planta√ß√£o n√£o encontrada!" });
    }

    console.log(`Planta√ß√£o ${id} exclu√≠da com sucesso!`);

    return res.status(200).json({
      success: true,
      message: "Planta√ß√£o exclu√≠da com sucesso!",
    });
  } catch (error) {
    console.error("Erro ao excluir planta√ß√£o:", error.stack);
    return res.status(500).json({ success: false, error: "Erro ao excluir planta√ß√£o!" });
  }
};

module.exports = {
  cadastrarPlantacao,
  listarPlantacoes,
  atualizarPlantacao,
  excluirPlantacao,
};
